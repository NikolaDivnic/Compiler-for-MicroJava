// generated with ast extension for cup
// version 0.8
// 26/0/2022 20:38:12


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(MethodDecl MethodDecl);
    public void visit(Mulop Mulop);
    public void visit(ConstructorDecl ConstructorDecl);
    public void visit(Relop Relop);
    public void visit(MethodAfterType MethodAfterType);
    public void visit(Assignop Assignop);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(ConstDeclListSingle ConstDeclListSingle);
    public void visit(ClassSomething ClassSomething);
    public void visit(ConstDeclAfterAssign ConstDeclAfterAssign);
    public void visit(FormParamFirstPart FormParamFirstPart);
    public void visit(Wrepper Wrepper);
    public void visit(Addop Addop);
    public void visit(CondTermAfter CondTermAfter);
    public void visit(ConditionAfterSingle ConditionAfterSingle);
    public void visit(StatementListDecl StatementListDecl);
    public void visit(RecordDecl RecordDecl);
    public void visit(Factor Factor);
    public void visit(CondTerm CondTerm);
    public void visit(Method Method);
    public void visit(Designator Designator);
    public void visit(Term Term);
    public void visit(ClassBody ClassBody);
    public void visit(FormParsList FormParsList);
    public void visit(ConditionAfterCondTerm ConditionAfterCondTerm);
    public void visit(Condition Condition);
    public void visit(AfterVarDecl AfterVarDecl);
    public void visit(Statements Statements);
    public void visit(ConstDeclList ConstDeclList);
    public void visit(DesignatorName DesignatorName);
    public void visit(AfterFactorDesignator AfterFactorDesignator);
    public void visit(Declarations Declarations);
    public void visit(VarDeclList VarDeclList);
    public void visit(FactorNewAfterType FactorNewAfterType);
    public void visit(Expr Expr);
    public void visit(ClassDeclaration ClassDeclaration);
    public void visit(ActPars ActPars);
    public void visit(VarDeclarationsList VarDeclarationsList);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(Decl Decl);
    public void visit(Statement Statement);
    public void visit(VarDecl VarDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(CondFact CondFact);
    public void visit(MethodTypeChose MethodTypeChose);
    public void visit(ConstrName ConstrName);
    public void visit(VarDSingleBracket VarDSingleBracket);
    public void visit(SingleStatement SingleStatement);
    public void visit(ExprAfterTerm ExprAfterTerm);
    public void visit(CondTermAfterSingle CondTermAfterSingle);
    public void visit(FormPars FormPars);
    public void visit(ClassMethods ClassMethods);
    public void visit(DesName DesName);
    public void visit(PrintExpr PrintExpr);
    public void visit(ConstDeclListSingleDecl ConstDeclListSingleDecl);
    public void visit(NoConstDeclList NoConstDeclList);
    public void visit(ConstDeclListDecl ConstDeclListDecl);
    public void visit(BoolConstDecl BoolConstDecl);
    public void visit(CharConstDecl CharConstDecl);
    public void visit(NumConstDecl NumConstDecl);
    public void visit(ConstDeclDecl ConstDeclDecl);
    public void visit(VarNotHaveBracket VarNotHaveBracket);
    public void visit(VarHaveBracket VarHaveBracket);
    public void visit(VarDeclListSingle VarDeclListSingle);
    public void visit(NoVarDeclList NoVarDeclList);
    public void visit(VarDeclListDecl VarDeclListDecl);
    public void visit(VarDeclDecl VarDeclDecl);
    public void visit(FormParsListSingle FormParsListSingle);
    public void visit(NoFormParsList NoFormParsList);
    public void visit(FormParsListDecl FormParsListDecl);
    public void visit(FormParamNoBrackes FormParamNoBrackes);
    public void visit(FormParamBrackes FormParamBrackes);
    public void visit(FormParsDecl FormParsDecl);
    public void visit(DesNameDecl DesNameDecl);
    public void visit(ArrayElementAccessDesignator ArrayElementAccessDesignator);
    public void visit(CleanDesignator CleanDesignator);
    public void visit(WrepperDecl WrepperDecl);
    public void visit(AssignopDecl AssignopDecl);
    public void visit(DesignatorStatDecrement DesignatorStatDecrement);
    public void visit(DesignatorStatIncrement DesignatorStatIncrement);
    public void visit(DesigStatementActParsNoBr DesigStatementActParsNoBr);
    public void visit(DesigStatementActPars DesigStatementActPars);
    public void visit(AssignopExpr AssignopExpr);
    public void visit(CondTermAfterSingleDecl CondTermAfterSingleDecl);
    public void visit(NoCondTermAfter NoCondTermAfter);
    public void visit(CondTermAfterList CondTermAfterList);
    public void visit(CondTermDecl CondTermDecl);
    public void visit(CondFactWithoutRelop CondFactWithoutRelop);
    public void visit(CondFactWithRelop CondFactWithRelop);
    public void visit(ConditionAfterSingleDecl ConditionAfterSingleDecl);
    public void visit(NoConditionAfter NoConditionAfter);
    public void visit(ConditionAfterList ConditionAfterList);
    public void visit(ConditionDecl ConditionDecl);
    public void visit(RelopLessEqual RelopLessEqual);
    public void visit(RelopLessThan RelopLessThan);
    public void visit(RelopLargerEqual RelopLargerEqual);
    public void visit(RelopLargerThan RelopLargerThan);
    public void visit(RelopNotEqual RelopNotEqual);
    public void visit(RelopEquals RelopEquals);
    public void visit(NoAfterFactorDesigActPars NoAfterFactorDesigActPars);
    public void visit(AfterFactorDesigWithActPars AfterFactorDesigWithActPars);
    public void visit(WithAfterParsExprList WithAfterParsExprList);
    public void visit(AfterParsWithList AfterParsWithList);
    public void visit(ParanthesesEnd ParanthesesEnd);
    public void visit(ParanthesesBegin ParanthesesBegin);
    public void visit(NewExpr NewExpr);
    public void visit(FactorExpr FactorExpr);
    public void visit(FactorNewExpr FactorNewExpr);
    public void visit(FactorNewNoExpr FactorNewNoExpr);
    public void visit(FactorBoolConst FactorBoolConst);
    public void visit(FactorCharConst FactorCharConst);
    public void visit(FactorNumConst FactorNumConst);
    public void visit(FactorDesignatorParam FactorDesignatorParam);
    public void visit(FactorDesignatorNoParam FactorDesignatorNoParam);
    public void visit(AddopMinus AddopMinus);
    public void visit(AddopPlus AddopPlus);
    public void visit(MulopModulo MulopModulo);
    public void visit(MulopDevide MulopDevide);
    public void visit(MulopMultiply MulopMultiply);
    public void visit(TermStmtOnly TermStmtOnly);
    public void visit(TermStmt TermStmt);
    public void visit(OneTerm OneTerm);
    public void visit(TermList TermList);
    public void visit(Neg Neg);
    public void visit(AddOperationTerm AddOperationTerm);
    public void visit(NegativeTerm NegativeTerm);
    public void visit(PrintWidth PrintWidth);
    public void visit(NoExprForPrint NoExprForPrint);
    public void visit(HaveExpr HaveExpr);
    public void visit(GoToStatement GoToStatement);
    public void visit(PrintStatement PrintStatement);
    public void visit(ReadStatement ReadStatement);
    public void visit(ReturnStatementExpr ReturnStatementExpr);
    public void visit(ReturnStatementNoExpr ReturnStatementNoExpr);
    public void visit(ContinueStatement ContinueStatement);
    public void visit(BreakStatement BreakStatement);
    public void visit(DoWhileStatement DoWhileStatement);
    public void visit(IfThenElseStatement IfThenElseStatement);
    public void visit(IfThenStatement IfThenStatement);
    public void visit(SingleStatementDesignator SingleStatementDesignator);
    public void visit(StatementLis StatementLis);
    public void visit(SingleStatementNoLabel SingleStatementNoLabel);
    public void visit(StatementWithLabel StatementWithLabel);
    public void visit(Label Label);
    public void visit(NoStatementList NoStatementList);
    public void visit(StatListDecl StatListDecl);
    public void visit(StatementListDeclaration StatementListDeclaration);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(MethodAfterTypeWithoutFormPars MethodAfterTypeWithoutFormPars);
    public void visit(MethodAfterTypeWithFormPars MethodAfterTypeWithFormPars);
    public void visit(MethodName MethodName);
    public void visit(MethodDeclarationsVoid MethodDeclarationsVoid);
    public void visit(MethodDeclarationsType MethodDeclarationsType);
    public void visit(MethodDeclaration MethodDeclaration);
    public void visit(Type Type);
    public void visit(NoMethodDeclarations NoMethodDeclarations);
    public void visit(MethodDeclarationsList MethodDeclarationsList);
    public void visit(ClassWithConstructor ClassWithConstructor);
    public void visit(NoClassDekl NoClassDekl);
    public void visit(HaveSomethingInClass HaveSomethingInClass);
    public void visit(AfterVarDeclarations AfterVarDeclarations);
    public void visit(ClassTelo ClassTelo);
    public void visit(ChildClass ChildClass);
    public void visit(RootClass RootClass);
    public void visit(ClassDeclarations ClassDeclarations);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(ConstDeclaration ConstDeclaration);
    public void visit(NoDecl NoDecl);
    public void visit(DeclarationsList DeclarationsList);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
